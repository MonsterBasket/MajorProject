import { useEffect, useState } from "react";
import image from "../images/environment-sprites.png";

function MapMaker(){
  const [x, setX] = useState(0);
  const [y, setY] = useState(0);
  const [previewX, setPreviewX] = useState(33);
  const [previewY, setPreviewY] = useState(63);

  useEffect(() => {
    window.addEventListener("keydown", handleInput);
    // setCoords(mapCoords)
    return () => {window.removeEventListener("keydown", handleInput);};
  }, [])

  function handleInput(e){
    if(e.key === "ArrowRight") return setX(prev=>prev - 16);
    if(e.key === "ArrowLeft") return setX(prev=>prev + 16);
    if(e.key === "ArrowUp") return setY(prev=>prev + 16);
    if(e.key === "ArrowDown") setY(prev=>prev - 16);
  }

  const movingMap = {
    position: "absolute",
    display: "grid",
    left: `${x}px`,
    top: `${y}px`,
    gridTemplateColumns: "repeat(40, 48px)",
    gridTemplateRows: "repeat(23, 48px)",
    justifyItems: "center",
    alignItems: "center",
    overflow: "hidden",
    transition: "all 0.3s"
  }
  const mapMaker = {
    position: "absolute",
    right: "0px",
    bottom: "0px",
    width: "240px",
    height: "310px"
  }
  const mapMakerContainer = {
    width: "240px",
    height: "240px",
    background: "rgb(0,0,0,0.5)"
  }
  const mapMakerPreview = {
    position: "absolute",
    width: "16px",
    height: "16px",
    top: "80px",
    left: "80px",
    padding: "32px",
    backgroundImage: `url(${image})`,
    transform: "scale(3)",
    backgroundPosition: `${(previewX - 2) * -16}px ${(previewY - 2) * -16}px`,
    overflow: "visible"
  }
  const mapMakerBorder  = {
    position: "absolute",
    width: "16px",
    height: "16px",
    left: "31px",
    top: "31px",
    border: "solid black 1px"
  }
  const parentStyle = {
    position: "absolute",
    left: "0%",
    top: "0%",
    width: "100%",
    height: "100%",
    background: "black",
    overflow: "hidden",
  }
  function childStyle(x, y) {
    const obj = {
    margin: "0%",
    width: "16px",
    height: "16px",
    transform: "scale(3)",
    backgroundImage: `url(${image})`,
    backgroundPosition: `${x * -16}px ${y * -16}px`}
    return obj
  }
  function secondChildStyle(x, y) {
    const obj = {
    margin: "0%",
    width: "100%",
    height: "100%",
    backgroundImage: `url(${image})`,
    backgroundPosition: `${x * -16}px ${y * -16}px`}
    return obj
  }

  function changeTile(index){
    // mapCoords[index] = [previewX, previewY];
    const newArray = coords;
    newArray[index] = [previewX, previewY];
    setCoords(newArray);
    const refresh = 0 + x;
    setX(refresh);
  }

  function changeX(e){
    setPreviewX(e.target.valueAsNumber);
  }
  function changeY(e){
    setPreviewY(e.target.valueAsNumber)
    console.log(previewX, previewY)
  }
  function left(){
    setPreviewX(previewX - 1)
  }
  function right(){
    setPreviewX(previewX + 1)
  }
  function up(){
    setPreviewY(previewY - 1)
  }
  function down(){
    setPreviewY(previewY + 1)
  }

  

  const mapCoords =  [[32,62],[33,62],[34,62],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [32,63],[33,63],[34,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [32,64],[33,64],[34,64],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],
  [33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63],[33,63]]
  const [coords, setCoords] = useState(mapCoords)

  const mapCoords2ndLayer = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,[115,77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,[99,79],[100,79],[101,79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,[99,80],[100,80],[101,80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  ]


  return <div style={parentStyle}>
    <div style={movingMap}>
      {coords.map((item, index) => <div key={index} style={childStyle(item[0], item[1])} onClick={() => changeTile(index)}>
        {mapCoords2ndLayer[index] == 0 ? "" : <div style={secondChildStyle(mapCoords2ndLayer[index][0], mapCoords2ndLayer[index][1])}></div>}
      </div>)}
    </div>
    <div style={mapMaker}>
      <div style={mapMakerContainer}>
        <div style={mapMakerPreview}>
          <div style={mapMakerBorder}></div>
        </div>
      </div>
      <input type="number" value={previewX} onChange={changeX} style={{width: "100px"}}/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button onClick={up}>{"↑"}</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      <input type="number" value={previewY} onChange={changeY} style={{width: "100px"}}/><button onClick={left}>{"<"}</button><button onClick={down}>{"↓"}</button><button onClick={right}>{">"}</button>
      <div style={{width: "100%", height: "100%"}}>{`${JSON.stringify(coords)}`}</div>
    </div>
  </div>
}

export default MapMaker;